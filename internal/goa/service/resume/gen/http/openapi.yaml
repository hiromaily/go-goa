swagger: "2.0"
info:
    title: resume API
    description: go-goa API with goa framework
    contact:
        name: hiromaily
        email: hiromaily@gmail.com
        url: https://hiromaily.github.io/
    license:
        name: MIT
        url: https://github.com/goadesign/goa/blob/master/LICENSE
    version: ""
host: localhost:8080
consumes:
    - application/json
    - application/xml
produces:
    - application/json
    - application/xml
    - application/gob
paths:
    /assets/{filepath}:
        get:
            tags:
                - static
            summary: Download docs/
            operationId: static#/assets/{*filepath}
            parameters:
                - name: filepath
                  in: path
                  description: Relative file path
                  required: true
                  type: string
            responses:
                "200":
                    description: File downloaded
                    schema:
                        type: file
                "404":
                    description: File not found
                    schema:
                        $ref: '#/definitions/Error'
            schemes:
                - http
    /auth/login:
        post:
            tags:
                - auth
            summary: login auth
            description: Login and return jwt token
            operationId: auth#login
            parameters:
                - name: LoginRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/AuthLoginRequestBody'
                    required:
                        - email
                        - password
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/AuthLoginResponseBody'
                    headers:
                        Authorization:
                            description: JWT token
                            type: string
                            pattern: ^Bearer [^ ]+$
                "401":
                    description: Unauthorized response.
                    schema:
                        $ref: '#/definitions/AuthLoginUnauthorizedResponseBody'
            schemes:
                - http
    /company:
        get:
            tags:
                - hy_company
            summary: companyList hy_company
            description: List all companies
            operationId: hy_company#companyList
            parameters:
                - name: Authorization
                  in: header
                  description: JWT token used to perform authorization
                  required: false
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/HyCompanyCompanyResponseCollection'
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/HyCompanyCompanyListNotFoundResponseBody'
            schemes:
                - http
            security:
                - jwt_header_Authorization: []
        post:
            tags:
                - hy_company
            summary: createCompany hy_company
            description: Create new company
            operationId: hy_company#createCompany
            produces:
                - application/json
            parameters:
                - name: Authorization
                  in: header
                  description: JWT token used to perform authorization
                  required: false
                  type: string
                - name: CreateCompanyRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/HyCompanyCreateCompanyRequestBody'
                    required:
                        - company_name
                        - country_id
                        - address
            responses:
                "201":
                    description: Created response.
                    schema:
                        $ref: '#/definitions/HyCompanyCreateCompanyResponseBody'
                "400":
                    description: Bad Request response.
                    schema:
                        $ref: '#/definitions/HyCompanyCreateCompanyBadRequestResponseBody'
            schemes:
                - http
            security:
                - jwt_header_Authorization: []
    /company/{company_id}:
        get:
            tags:
                - hy_company
            summary: getCompany hy_company
            description: returns company by given company_id
            operationId: hy_company#getCompany
            produces:
                - application/json
            parameters:
                - name: company_id
                  in: path
                  description: Company ID
                  required: true
                  type: integer
                  minimum: 1
                - name: Authorization
                  in: header
                  description: JWT token used to perform authorization
                  required: false
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/HyCompanyGetCompanyResponseBody'
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/HyCompanyGetCompanyNotFoundResponseBody'
            schemes:
                - http
            security:
                - jwt_header_Authorization: []
        put:
            tags:
                - hy_company
            summary: updateCompany hy_company
            description: Update company data
            operationId: hy_company#updateCompany
            parameters:
                - name: company_id
                  in: path
                  description: Company ID
                  required: true
                  type: integer
                  minimum: 1
                - name: Authorization
                  in: header
                  description: JWT token used to perform authorization
                  required: false
                  type: string
                - name: UpdateCompanyRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/HyCompanyUpdateCompanyRequestBody'
            responses:
                "200":
                    description: OK response.
                "400":
                    description: Bad Request response.
                    schema:
                        $ref: '#/definitions/HyCompanyUpdateCompanyBadRequestResponseBody'
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/HyCompanyUpdateCompanyNotFoundResponseBody'
            schemes:
                - http
            security:
                - jwt_header_Authorization: []
        delete:
            tags:
                - hy_company
            summary: deleteCompany hy_company
            description: Delete company
            operationId: hy_company#deleteCompany
            parameters:
                - name: company_id
                  in: path
                  description: Company ID
                  required: true
                  type: integer
                  minimum: 1
                - name: Authorization
                  in: header
                  description: JWT token used to perform authorization
                  required: false
                  type: string
            responses:
                "200":
                    description: OK response.
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/HyCompanyDeleteCompanyNotFoundResponseBody'
            schemes:
                - http
            security:
                - jwt_header_Authorization: []
    /health:
        get:
            tags:
                - health
            summary: health health
            operationId: health#health
            responses:
                "200":
                    description: OK response.
            schemes:
                - http
    /tech:
        get:
            tags:
                - hy_tech
            summary: techList hy_tech
            description: List all techs
            operationId: hy_tech#techList
            parameters:
                - name: Authorization
                  in: header
                  description: JWT token used to perform authorization
                  required: false
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/HyTechTechResponseCollection'
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/HyTechTechListNotFoundResponseBody'
            schemes:
                - http
            security:
                - jwt_header_Authorization: []
        post:
            tags:
                - hy_tech
            summary: createTech hy_tech
            description: Create new tech
            operationId: hy_tech#createTech
            produces:
                - application/json
            parameters:
                - name: Authorization
                  in: header
                  description: JWT token used to perform authorization
                  required: false
                  type: string
                - name: CreateTechRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/HyTechCreateTechRequestBody'
                    required:
                        - tech_name
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/HyTechCreateTechOKResponseBody'
                "201":
                    description: Created response.
                    schema:
                        $ref: '#/definitions/HyTechCreateTechCreatedResponseBody'
                "400":
                    description: Bad Request response.
                    schema:
                        $ref: '#/definitions/HyTechCreateTechBadRequestResponseBody'
            schemes:
                - http
            security:
                - jwt_header_Authorization: []
    /tech/{tech_id}:
        get:
            tags:
                - hy_tech
            summary: getTech hy_tech
            description: returns tech by given tech id
            operationId: hy_tech#getTech
            produces:
                - application/json
            parameters:
                - name: tech_id
                  in: path
                  description: Tech ID
                  required: true
                  type: integer
                  minimum: 1
                - name: Authorization
                  in: header
                  description: JWT token used to perform authorization
                  required: false
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/HyTechGetTechResponseBody'
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/HyTechGetTechNotFoundResponseBody'
            schemes:
                - http
            security:
                - jwt_header_Authorization: []
        put:
            tags:
                - hy_tech
            summary: updateTech hy_tech
            description: Update tech data
            operationId: hy_tech#updateTech
            parameters:
                - name: tech_id
                  in: path
                  description: Tech ID
                  required: true
                  type: integer
                  minimum: 1
                - name: Authorization
                  in: header
                  description: JWT token used to perform authorization
                  required: false
                  type: string
                - name: UpdateTechRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/HyTechUpdateTechRequestBody'
                    required:
                        - tech_name
            responses:
                "200":
                    description: OK response.
                "400":
                    description: Bad Request response.
                    schema:
                        $ref: '#/definitions/HyTechUpdateTechBadRequestResponseBody'
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/HyTechUpdateTechNotFoundResponseBody'
            schemes:
                - http
            security:
                - jwt_header_Authorization: []
        delete:
            tags:
                - hy_tech
            summary: deleteTech hy_tech
            description: Delete tech
            operationId: hy_tech#deleteTech
            parameters:
                - name: tech_id
                  in: path
                  description: Tech ID
                  required: true
                  type: integer
                  minimum: 1
                - name: Authorization
                  in: header
                  description: JWT token used to perform authorization
                  required: false
                  type: string
            responses:
                "200":
                    description: OK response.
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/HyTechDeleteTechNotFoundResponseBody'
            schemes:
                - http
            security:
                - jwt_header_Authorization: []
    /user:
        get:
            tags:
                - hy_user
            summary: userList hy_user
            description: List all users
            operationId: hy_user#userList
            parameters:
                - name: Authorization
                  in: header
                  description: JWT token used to perform authorization
                  required: false
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/HyUserUserResponseCollection'
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/HyUserUserListNotFoundResponseBody'
            schemes:
                - http
            security:
                - jwt_header_Authorization: []
        post:
            tags:
                - hy_user
            summary: createUser hy_user
            description: Create new user
            operationId: hy_user#createUser
            produces:
                - application/json
            parameters:
                - name: Authorization
                  in: header
                  description: JWT token used to perform authorization
                  required: false
                  type: string
                - name: CreateUserRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/HyUserCreateUserRequestBody'
                    required:
                        - user_name
                        - email
                        - password
            responses:
                "201":
                    description: Created response.
                    schema:
                        $ref: '#/definitions/HyUserCreateUserResponseBody'
                "400":
                    description: Bad Request response.
                    schema:
                        $ref: '#/definitions/HyUserCreateUserBadRequestResponseBody'
            schemes:
                - http
            security:
                - jwt_header_Authorization: []
    /user/{user_id}:
        get:
            tags:
                - hy_user
            summary: getUser hy_user
            description: Get user by given user id
            operationId: hy_user#getUser
            produces:
                - application/json
            parameters:
                - name: user_id
                  in: path
                  description: User ID
                  required: true
                  type: integer
                  minimum: 1
                - name: Authorization
                  in: header
                  description: JWT token used to perform authorization
                  required: false
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/HyUserGetUserResponseBody'
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/HyUserGetUserNotFoundResponseBody'
            schemes:
                - http
            security:
                - jwt_header_Authorization: []
        put:
            tags:
                - hy_user
            summary: updateUser hy_user
            description: Update user data
            operationId: hy_user#updateUser
            parameters:
                - name: user_id
                  in: path
                  description: User ID
                  required: true
                  type: integer
                  minimum: 1
                - name: Authorization
                  in: header
                  description: JWT token used to perform authorization
                  required: false
                  type: string
                - name: UpdateUserRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/HyUserUpdateUserRequestBody'
            responses:
                "200":
                    description: OK response.
                "400":
                    description: Bad Request response.
                    schema:
                        $ref: '#/definitions/HyUserUpdateUserBadRequestResponseBody'
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/HyUserUpdateUserNotFoundResponseBody'
            schemes:
                - http
            security:
                - jwt_header_Authorization: []
        delete:
            tags:
                - hy_user
            summary: deleteUser hy_user
            description: Delete user
            operationId: hy_user#deleteUser
            parameters:
                - name: user_id
                  in: path
                  description: User ID
                  required: true
                  type: integer
                  minimum: 1
                - name: Authorization
                  in: header
                  description: JWT token used to perform authorization
                  required: false
                  type: string
            responses:
                "200":
                    description: OK response.
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/HyUserDeleteUserNotFoundResponseBody'
            schemes:
                - http
            security:
                - jwt_header_Authorization: []
    /user/{userID}/disliketech:
        get:
            tags:
                - hy_usertech
            summary: getUserDisLikeTech hy_usertech
            description: get user's dislike techs
            operationId: hy_usertech#getUserDisLikeTech
            parameters:
                - name: userID
                  in: path
                  description: User ID
                  required: true
                  type: integer
                  minimum: 1
                - name: Authorization
                  in: header
                  description: JWT token used to perform authorization
                  required: false
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/HyUsertechUsertechResponseCollection'
            schemes:
                - http
            security:
                - jwt_header_Authorization: []
    /user/{userID}/liketech:
        get:
            tags:
                - hy_usertech
            summary: getUserLikeTech hy_usertech
            description: get user's favorite techs
            operationId: hy_usertech#getUserLikeTech
            parameters:
                - name: userID
                  in: path
                  description: User ID
                  required: true
                  type: integer
                  minimum: 1
                - name: Authorization
                  in: header
                  description: JWT token used to perform authorization
                  required: false
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/HyUsertechUsertechResponseCollection'
            schemes:
                - http
            security:
                - jwt_header_Authorization: []
    /user/{userID}/workhistory:
        get:
            tags:
                - hy_userWorkHistory
            summary: getUserWorkHistory hy_userWorkHistory
            description: get user's work history
            operationId: hy_userWorkHistory#getUserWorkHistory
            parameters:
                - name: userID
                  in: path
                  description: User ID
                  required: true
                  type: integer
                  minimum: 1
                - name: Authorization
                  in: header
                  description: JWT token used to perform authorization
                  required: false
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/HyUserWorkHistoryUserworkhistoryResponseCollection'
            schemes:
                - http
            security:
                - jwt_header_Authorization: []
definitions:
    AuthLoginRequestBody:
        title: AuthLoginRequestBody
        type: object
        properties:
            email:
                type: string
                description: E-mail of user
                example: hy@gmail.com
                format: email
            password:
                type: string
                description: Password
                example: xxxxxxxx
                minLength: 8
                maxLength: 20
        example:
            email: hy@gmail.com
            password: xxxxxxxx
        required:
            - email
            - password
    AuthLoginResponseBody:
        title: 'Mediatype identifier: application/vnd.authorized+json; view=default'
        type: object
        properties:
            id:
                type: integer
                description: Key ID
                example: 10
                minimum: 1
        description: LoginResponseBody result type (default view)
        example:
            id: 10
        required:
            - id
    AuthLoginUnauthorizedResponseBody:
        title: 'Mediatype identifier: application/vnd.goa.error; view=default'
        type: object
        properties:
            fault:
                type: boolean
                description: Is the error a server-side fault?
                example: true
            id:
                type: string
                description: ID is a unique identifier for this particular occurrence of the problem.
                example: 123abc
            message:
                type: string
                description: Message is a human-readable explanation specific to this occurrence of the problem.
                example: parameter 'p' must be an integer
            name:
                type: string
                description: Name is the name of this class of errors.
                example: bad_request
            temporary:
                type: boolean
                description: Is the error temporary?
                example: false
            timeout:
                type: boolean
                description: Is the error a timeout?
                example: true
        description: login_Unauthorized_response_body result type (default view)
        example:
            fault: true
            id: 123abc
            message: parameter 'p' must be an integer
            name: bad_request
            temporary: true
            timeout: true
        required:
            - name
            - id
            - message
            - temporary
            - timeout
            - fault
    CompanyResponse:
        title: 'Mediatype identifier: application/vnd.company+json; view=default'
        type: object
        properties:
            address:
                type: string
                description: Company Address
                example: Shinagawa Tokyo
                minLength: 2
                maxLength: 80
            company_id:
                type: integer
                description: Key ID
                example: 10
                minimum: 1
            company_name:
                type: string
                description: Company name
                example: Company
                minLength: 2
                maxLength: 40
            country_name:
                type: string
                example: Voluptatum et consequatur ad.
        description: A company information (default view)
        example:
            address: Shinagawa Tokyo
            company_id: 10
            company_name: Company
            country_name: Et ipsa.
    Error:
        title: 'Mediatype identifier: application/vnd.goa.error; view=default'
        type: object
        properties:
            fault:
                type: boolean
                description: Is the error a server-side fault?
                example: true
            id:
                type: string
                description: ID is a unique identifier for this particular occurrence of the problem.
                example: 123abc
            message:
                type: string
                description: Message is a human-readable explanation specific to this occurrence of the problem.
                example: parameter 'p' must be an integer
            name:
                type: string
                description: Name is the name of this class of errors.
                example: bad_request
            temporary:
                type: boolean
                description: Is the error temporary?
                example: false
            timeout:
                type: boolean
                description: Is the error a timeout?
                example: false
        description: Error response result type (default view)
        example:
            fault: true
            id: 123abc
            message: parameter 'p' must be an integer
            name: bad_request
            temporary: false
            timeout: true
        required:
            - name
            - id
            - message
            - temporary
            - timeout
            - fault
    HyCompanyCompanyListNotFoundResponseBody:
        title: 'Mediatype identifier: application/vnd.goa.error; view=default'
        type: object
        properties:
            fault:
                type: boolean
                description: Is the error a server-side fault?
                example: true
            id:
                type: string
                description: ID is a unique identifier for this particular occurrence of the problem.
                example: 123abc
            message:
                type: string
                description: Message is a human-readable explanation specific to this occurrence of the problem.
                example: parameter 'p' must be an integer
            name:
                type: string
                description: Name is the name of this class of errors.
                example: bad_request
            temporary:
                type: boolean
                description: Is the error temporary?
                example: false
            timeout:
                type: boolean
                description: Is the error a timeout?
                example: true
        description: companyList_NotFound_response_body result type (default view)
        example:
            fault: true
            id: 123abc
            message: parameter 'p' must be an integer
            name: bad_request
            temporary: false
            timeout: true
        required:
            - name
            - id
            - message
            - temporary
            - timeout
            - fault
    HyCompanyCompanyResponseCollection:
        title: 'Mediatype identifier: application/vnd.company+json; type=collection; view=default'
        type: array
        items:
            $ref: '#/definitions/CompanyResponse'
        description: CompanyListResponseBody is the result type for an array of CompanyResponse (default view)
        example:
            - address: Shinagawa Tokyo
              company_id: 10
              company_name: Company
              country_name: Libero praesentium facilis qui ut.
            - address: Shinagawa Tokyo
              company_id: 10
              company_name: Company
              country_name: Libero praesentium facilis qui ut.
            - address: Shinagawa Tokyo
              company_id: 10
              company_name: Company
              country_name: Libero praesentium facilis qui ut.
            - address: Shinagawa Tokyo
              company_id: 10
              company_name: Company
              country_name: Libero praesentium facilis qui ut.
    HyCompanyCreateCompanyBadRequestResponseBody:
        title: 'Mediatype identifier: application/vnd.goa.error; view=default'
        type: object
        properties:
            fault:
                type: boolean
                description: Is the error a server-side fault?
                example: false
            id:
                type: string
                description: ID is a unique identifier for this particular occurrence of the problem.
                example: 123abc
            message:
                type: string
                description: Message is a human-readable explanation specific to this occurrence of the problem.
                example: parameter 'p' must be an integer
            name:
                type: string
                description: Name is the name of this class of errors.
                example: bad_request
            temporary:
                type: boolean
                description: Is the error temporary?
                example: true
            timeout:
                type: boolean
                description: Is the error a timeout?
                example: true
        description: createCompany_BadRequest_response_body result type (default view)
        example:
            fault: false
            id: 123abc
            message: parameter 'p' must be an integer
            name: bad_request
            temporary: true
            timeout: false
        required:
            - name
            - id
            - message
            - temporary
            - timeout
            - fault
    HyCompanyCreateCompanyRequestBody:
        title: HyCompanyCreateCompanyRequestBody
        type: object
        properties:
            address:
                type: string
                description: Company Address
                example: Shinagawa Tokyo
                minLength: 2
                maxLength: 80
            company_name:
                type: string
                description: Company name
                example: Company
                minLength: 2
                maxLength: 40
            country_id:
                type: integer
                description: Country ID
                example: 110
                minimum: 1
                maximum: 999
        example:
            address: Shinagawa Tokyo
            company_name: Company
            country_id: 110
        required:
            - company_name
            - country_id
            - address
    HyCompanyCreateCompanyResponseBody:
        title: 'Mediatype identifier: application/vnd.company+json; view=default'
        type: object
        properties:
            address:
                type: string
                description: Company Address
                example: Shinagawa Tokyo
                minLength: 2
                maxLength: 80
            company_id:
                type: integer
                description: Key ID
                example: 10
                minimum: 1
            company_name:
                type: string
                description: Company name
                example: Company
                minLength: 2
                maxLength: 40
            country_name:
                type: string
                example: Ut non.
        description: CreateCompanyResponseBody result type (default view)
        example:
            address: Shinagawa Tokyo
            company_id: 10
            company_name: Company
            country_name: Voluptatem quasi pariatur.
    HyCompanyDeleteCompanyNotFoundResponseBody:
        title: 'Mediatype identifier: application/vnd.goa.error; view=default'
        type: object
        properties:
            fault:
                type: boolean
                description: Is the error a server-side fault?
                example: false
            id:
                type: string
                description: ID is a unique identifier for this particular occurrence of the problem.
                example: 123abc
            message:
                type: string
                description: Message is a human-readable explanation specific to this occurrence of the problem.
                example: parameter 'p' must be an integer
            name:
                type: string
                description: Name is the name of this class of errors.
                example: bad_request
            temporary:
                type: boolean
                description: Is the error temporary?
                example: false
            timeout:
                type: boolean
                description: Is the error a timeout?
                example: true
        description: deleteCompany_NotFound_response_body result type (default view)
        example:
            fault: true
            id: 123abc
            message: parameter 'p' must be an integer
            name: bad_request
            temporary: true
            timeout: false
        required:
            - name
            - id
            - message
            - temporary
            - timeout
            - fault
    HyCompanyGetCompanyNotFoundResponseBody:
        title: 'Mediatype identifier: application/vnd.goa.error; view=default'
        type: object
        properties:
            fault:
                type: boolean
                description: Is the error a server-side fault?
                example: false
            id:
                type: string
                description: ID is a unique identifier for this particular occurrence of the problem.
                example: 123abc
            message:
                type: string
                description: Message is a human-readable explanation specific to this occurrence of the problem.
                example: parameter 'p' must be an integer
            name:
                type: string
                description: Name is the name of this class of errors.
                example: bad_request
            temporary:
                type: boolean
                description: Is the error temporary?
                example: false
            timeout:
                type: boolean
                description: Is the error a timeout?
                example: false
        description: getCompany_NotFound_response_body result type (default view)
        example:
            fault: true
            id: 123abc
            message: parameter 'p' must be an integer
            name: bad_request
            temporary: true
            timeout: true
        required:
            - name
            - id
            - message
            - temporary
            - timeout
            - fault
    HyCompanyGetCompanyResponseBody:
        title: 'Mediatype identifier: application/vnd.company+json; view=default'
        type: object
        properties:
            address:
                type: string
                description: Company Address
                example: Shinagawa Tokyo
                minLength: 2
                maxLength: 80
            company_id:
                type: integer
                description: Key ID
                example: 10
                minimum: 1
            company_name:
                type: string
                description: Company name
                example: Company
                minLength: 2
                maxLength: 40
            country_name:
                type: string
                example: Laboriosam rerum beatae dicta eveniet exercitationem non.
        description: GetCompanyResponseBody result type (default view)
        example:
            address: Shinagawa Tokyo
            company_id: 10
            company_name: Company
            country_name: A officia.
    HyCompanyUpdateCompanyBadRequestResponseBody:
        title: 'Mediatype identifier: application/vnd.goa.error; view=default'
        type: object
        properties:
            fault:
                type: boolean
                description: Is the error a server-side fault?
                example: true
            id:
                type: string
                description: ID is a unique identifier for this particular occurrence of the problem.
                example: 123abc
            message:
                type: string
                description: Message is a human-readable explanation specific to this occurrence of the problem.
                example: parameter 'p' must be an integer
            name:
                type: string
                description: Name is the name of this class of errors.
                example: bad_request
            temporary:
                type: boolean
                description: Is the error temporary?
                example: true
            timeout:
                type: boolean
                description: Is the error a timeout?
                example: true
        description: updateCompany_BadRequest_response_body result type (default view)
        example:
            fault: false
            id: 123abc
            message: parameter 'p' must be an integer
            name: bad_request
            temporary: false
            timeout: true
        required:
            - name
            - id
            - message
            - temporary
            - timeout
            - fault
    HyCompanyUpdateCompanyNotFoundResponseBody:
        title: 'Mediatype identifier: application/vnd.goa.error; view=default'
        type: object
        properties:
            fault:
                type: boolean
                description: Is the error a server-side fault?
                example: true
            id:
                type: string
                description: ID is a unique identifier for this particular occurrence of the problem.
                example: 123abc
            message:
                type: string
                description: Message is a human-readable explanation specific to this occurrence of the problem.
                example: parameter 'p' must be an integer
            name:
                type: string
                description: Name is the name of this class of errors.
                example: bad_request
            temporary:
                type: boolean
                description: Is the error temporary?
                example: false
            timeout:
                type: boolean
                description: Is the error a timeout?
                example: false
        description: updateCompany_NotFound_response_body result type (default view)
        example:
            fault: false
            id: 123abc
            message: parameter 'p' must be an integer
            name: bad_request
            temporary: false
            timeout: true
        required:
            - name
            - id
            - message
            - temporary
            - timeout
            - fault
    HyCompanyUpdateCompanyRequestBody:
        title: HyCompanyUpdateCompanyRequestBody
        type: object
        properties:
            address:
                type: string
                description: Company Address
                example: Shinagawa Tokyo
                minLength: 2
                maxLength: 80
            company_name:
                type: string
                description: Company name
                example: Company
                minLength: 2
                maxLength: 40
            country_id:
                type: integer
                description: Country ID
                example: 110
                minimum: 1
                maximum: 999
        example:
            address: Shinagawa Tokyo
            company_name: Company
            country_id: 110
    HyTechCreateTechBadRequestResponseBody:
        title: 'Mediatype identifier: application/vnd.goa.error; view=default'
        type: object
        properties:
            fault:
                type: boolean
                description: Is the error a server-side fault?
                example: true
            id:
                type: string
                description: ID is a unique identifier for this particular occurrence of the problem.
                example: 123abc
            message:
                type: string
                description: Message is a human-readable explanation specific to this occurrence of the problem.
                example: parameter 'p' must be an integer
            name:
                type: string
                description: Name is the name of this class of errors.
                example: bad_request
            temporary:
                type: boolean
                description: Is the error temporary?
                example: false
            timeout:
                type: boolean
                description: Is the error a timeout?
                example: true
        description: createTech_BadRequest_response_body result type (default view)
        example:
            fault: false
            id: 123abc
            message: parameter 'p' must be an integer
            name: bad_request
            temporary: true
            timeout: true
        required:
            - name
            - id
            - message
            - temporary
            - timeout
            - fault
    HyTechCreateTechCreatedResponseBody:
        title: 'Mediatype identifier: application/vnd.tech+json; view=default'
        type: object
        properties:
            tech_id:
                type: integer
                description: Key ID
                example: 10
                minimum: 1
            tech_name:
                type: string
                description: Tech name
                example: Golang
                minLength: 1
                maxLength: 40
        description: CreateTechCreatedResponseBody result type (default view)
        example:
            tech_id: 10
            tech_name: Golang
    HyTechCreateTechOKResponseBody:
        title: 'Mediatype identifier: application/vnd.tech+json; view=default'
        type: object
        properties:
            tech_id:
                type: integer
                description: Key ID
                example: 10
                minimum: 1
            tech_name:
                type: string
                description: Tech name
                example: Golang
                minLength: 1
                maxLength: 40
        description: CreateTechOKResponseBody result type (default view)
        example:
            tech_id: 10
            tech_name: Golang
    HyTechCreateTechRequestBody:
        title: HyTechCreateTechRequestBody
        type: object
        properties:
            tech_name:
                type: string
                description: Tech name
                example: Golang
                minLength: 1
                maxLength: 40
        example:
            tech_name: Golang
        required:
            - tech_name
    HyTechDeleteTechNotFoundResponseBody:
        title: 'Mediatype identifier: application/vnd.goa.error; view=default'
        type: object
        properties:
            fault:
                type: boolean
                description: Is the error a server-side fault?
                example: true
            id:
                type: string
                description: ID is a unique identifier for this particular occurrence of the problem.
                example: 123abc
            message:
                type: string
                description: Message is a human-readable explanation specific to this occurrence of the problem.
                example: parameter 'p' must be an integer
            name:
                type: string
                description: Name is the name of this class of errors.
                example: bad_request
            temporary:
                type: boolean
                description: Is the error temporary?
                example: false
            timeout:
                type: boolean
                description: Is the error a timeout?
                example: true
        description: deleteTech_NotFound_response_body result type (default view)
        example:
            fault: true
            id: 123abc
            message: parameter 'p' must be an integer
            name: bad_request
            temporary: false
            timeout: true
        required:
            - name
            - id
            - message
            - temporary
            - timeout
            - fault
    HyTechGetTechNotFoundResponseBody:
        title: 'Mediatype identifier: application/vnd.goa.error; view=default'
        type: object
        properties:
            fault:
                type: boolean
                description: Is the error a server-side fault?
                example: true
            id:
                type: string
                description: ID is a unique identifier for this particular occurrence of the problem.
                example: 123abc
            message:
                type: string
                description: Message is a human-readable explanation specific to this occurrence of the problem.
                example: parameter 'p' must be an integer
            name:
                type: string
                description: Name is the name of this class of errors.
                example: bad_request
            temporary:
                type: boolean
                description: Is the error temporary?
                example: false
            timeout:
                type: boolean
                description: Is the error a timeout?
                example: true
        description: getTech_NotFound_response_body result type (default view)
        example:
            fault: true
            id: 123abc
            message: parameter 'p' must be an integer
            name: bad_request
            temporary: true
            timeout: false
        required:
            - name
            - id
            - message
            - temporary
            - timeout
            - fault
    HyTechGetTechResponseBody:
        title: 'Mediatype identifier: application/vnd.tech+json; view=default'
        type: object
        properties:
            tech_id:
                type: integer
                description: Key ID
                example: 10
                minimum: 1
            tech_name:
                type: string
                description: Tech name
                example: Golang
                minLength: 1
                maxLength: 40
        description: GetTechResponseBody result type (default view)
        example:
            tech_id: 10
            tech_name: Golang
    HyTechTechListNotFoundResponseBody:
        title: 'Mediatype identifier: application/vnd.goa.error; view=default'
        type: object
        properties:
            fault:
                type: boolean
                description: Is the error a server-side fault?
                example: false
            id:
                type: string
                description: ID is a unique identifier for this particular occurrence of the problem.
                example: 123abc
            message:
                type: string
                description: Message is a human-readable explanation specific to this occurrence of the problem.
                example: parameter 'p' must be an integer
            name:
                type: string
                description: Name is the name of this class of errors.
                example: bad_request
            temporary:
                type: boolean
                description: Is the error temporary?
                example: true
            timeout:
                type: boolean
                description: Is the error a timeout?
                example: true
        description: techList_NotFound_response_body result type (default view)
        example:
            fault: true
            id: 123abc
            message: parameter 'p' must be an integer
            name: bad_request
            temporary: true
            timeout: false
        required:
            - name
            - id
            - message
            - temporary
            - timeout
            - fault
    HyTechTechResponseCollection:
        title: 'Mediatype identifier: application/vnd.tech+json; type=collection; view=default'
        type: array
        items:
            $ref: '#/definitions/TechResponse'
        description: TechListResponseBody is the result type for an array of TechResponse (default view)
        example:
            - tech_id: 10
              tech_name: Golang
            - tech_id: 10
              tech_name: Golang
            - tech_id: 10
              tech_name: Golang
    HyTechUpdateTechBadRequestResponseBody:
        title: 'Mediatype identifier: application/vnd.goa.error; view=default'
        type: object
        properties:
            fault:
                type: boolean
                description: Is the error a server-side fault?
                example: true
            id:
                type: string
                description: ID is a unique identifier for this particular occurrence of the problem.
                example: 123abc
            message:
                type: string
                description: Message is a human-readable explanation specific to this occurrence of the problem.
                example: parameter 'p' must be an integer
            name:
                type: string
                description: Name is the name of this class of errors.
                example: bad_request
            temporary:
                type: boolean
                description: Is the error temporary?
                example: true
            timeout:
                type: boolean
                description: Is the error a timeout?
                example: false
        description: updateTech_BadRequest_response_body result type (default view)
        example:
            fault: true
            id: 123abc
            message: parameter 'p' must be an integer
            name: bad_request
            temporary: false
            timeout: false
        required:
            - name
            - id
            - message
            - temporary
            - timeout
            - fault
    HyTechUpdateTechNotFoundResponseBody:
        title: 'Mediatype identifier: application/vnd.goa.error; view=default'
        type: object
        properties:
            fault:
                type: boolean
                description: Is the error a server-side fault?
                example: false
            id:
                type: string
                description: ID is a unique identifier for this particular occurrence of the problem.
                example: 123abc
            message:
                type: string
                description: Message is a human-readable explanation specific to this occurrence of the problem.
                example: parameter 'p' must be an integer
            name:
                type: string
                description: Name is the name of this class of errors.
                example: bad_request
            temporary:
                type: boolean
                description: Is the error temporary?
                example: true
            timeout:
                type: boolean
                description: Is the error a timeout?
                example: true
        description: updateTech_NotFound_response_body result type (default view)
        example:
            fault: true
            id: 123abc
            message: parameter 'p' must be an integer
            name: bad_request
            temporary: false
            timeout: false
        required:
            - name
            - id
            - message
            - temporary
            - timeout
            - fault
    HyTechUpdateTechRequestBody:
        title: HyTechUpdateTechRequestBody
        type: object
        properties:
            tech_name:
                type: string
                description: Tech name
                example: Golang
                minLength: 1
                maxLength: 40
        example:
            tech_name: Golang
        required:
            - tech_name
    HyUserCreateUserBadRequestResponseBody:
        title: 'Mediatype identifier: application/vnd.goa.error; view=default'
        type: object
        properties:
            fault:
                type: boolean
                description: Is the error a server-side fault?
                example: true
            id:
                type: string
                description: ID is a unique identifier for this particular occurrence of the problem.
                example: 123abc
            message:
                type: string
                description: Message is a human-readable explanation specific to this occurrence of the problem.
                example: parameter 'p' must be an integer
            name:
                type: string
                description: Name is the name of this class of errors.
                example: bad_request
            temporary:
                type: boolean
                description: Is the error temporary?
                example: false
            timeout:
                type: boolean
                description: Is the error a timeout?
                example: true
        description: createUser_BadRequest_response_body result type (default view)
        example:
            fault: true
            id: 123abc
            message: parameter 'p' must be an integer
            name: bad_request
            temporary: false
            timeout: true
        required:
            - name
            - id
            - message
            - temporary
            - timeout
            - fault
    HyUserCreateUserRequestBody:
        title: HyUserCreateUserRequestBody
        type: object
        properties:
            email:
                type: string
                description: E-mail of user
                example: hy@gmail.com
                format: email
            password:
                type: string
                description: Password
                example: xxxxxxxx
                minLength: 8
                maxLength: 20
            user_name:
                type: string
                description: User name
                example: Hiroki
                minLength: 2
                maxLength: 20
        example:
            email: hy@gmail.com
            password: xxxxxxxx
            user_name: Hiroki
        required:
            - user_name
            - email
            - password
    HyUserCreateUserResponseBody:
        title: 'Mediatype identifier: application/vnd.user+json; view=default'
        type: object
        properties:
            email:
                type: string
                description: E-mail of user
                example: hy@gmail.com
                format: email
            user_id:
                type: integer
                description: Key ID
                example: 10
                minimum: 1
            user_name:
                type: string
                description: User name
                example: Hiroki
                minLength: 2
                maxLength: 20
        description: CreateUserResponseBody result type (default view)
        example:
            email: hy@gmail.com
            user_id: 10
            user_name: Hiroki
    HyUserDeleteUserNotFoundResponseBody:
        title: 'Mediatype identifier: application/vnd.goa.error; view=default'
        type: object
        properties:
            fault:
                type: boolean
                description: Is the error a server-side fault?
                example: true
            id:
                type: string
                description: ID is a unique identifier for this particular occurrence of the problem.
                example: 123abc
            message:
                type: string
                description: Message is a human-readable explanation specific to this occurrence of the problem.
                example: parameter 'p' must be an integer
            name:
                type: string
                description: Name is the name of this class of errors.
                example: bad_request
            temporary:
                type: boolean
                description: Is the error temporary?
                example: false
            timeout:
                type: boolean
                description: Is the error a timeout?
                example: false
        description: deleteUser_NotFound_response_body result type (default view)
        example:
            fault: false
            id: 123abc
            message: parameter 'p' must be an integer
            name: bad_request
            temporary: false
            timeout: true
        required:
            - name
            - id
            - message
            - temporary
            - timeout
            - fault
    HyUserGetUserNotFoundResponseBody:
        title: 'Mediatype identifier: application/vnd.goa.error; view=default'
        type: object
        properties:
            fault:
                type: boolean
                description: Is the error a server-side fault?
                example: false
            id:
                type: string
                description: ID is a unique identifier for this particular occurrence of the problem.
                example: 123abc
            message:
                type: string
                description: Message is a human-readable explanation specific to this occurrence of the problem.
                example: parameter 'p' must be an integer
            name:
                type: string
                description: Name is the name of this class of errors.
                example: bad_request
            temporary:
                type: boolean
                description: Is the error temporary?
                example: false
            timeout:
                type: boolean
                description: Is the error a timeout?
                example: false
        description: getUser_NotFound_response_body result type (default view)
        example:
            fault: true
            id: 123abc
            message: parameter 'p' must be an integer
            name: bad_request
            temporary: false
            timeout: false
        required:
            - name
            - id
            - message
            - temporary
            - timeout
            - fault
    HyUserGetUserResponseBody:
        title: 'Mediatype identifier: application/vnd.user+json; view=default'
        type: object
        properties:
            email:
                type: string
                description: E-mail of user
                example: hy@gmail.com
                format: email
            user_id:
                type: integer
                description: Key ID
                example: 10
                minimum: 1
            user_name:
                type: string
                description: User name
                example: Hiroki
                minLength: 2
                maxLength: 20
        description: GetUserResponseBody result type (default view)
        example:
            email: hy@gmail.com
            user_id: 10
            user_name: Hiroki
    HyUserUpdateUserBadRequestResponseBody:
        title: 'Mediatype identifier: application/vnd.goa.error; view=default'
        type: object
        properties:
            fault:
                type: boolean
                description: Is the error a server-side fault?
                example: true
            id:
                type: string
                description: ID is a unique identifier for this particular occurrence of the problem.
                example: 123abc
            message:
                type: string
                description: Message is a human-readable explanation specific to this occurrence of the problem.
                example: parameter 'p' must be an integer
            name:
                type: string
                description: Name is the name of this class of errors.
                example: bad_request
            temporary:
                type: boolean
                description: Is the error temporary?
                example: true
            timeout:
                type: boolean
                description: Is the error a timeout?
                example: true
        description: updateUser_BadRequest_response_body result type (default view)
        example:
            fault: true
            id: 123abc
            message: parameter 'p' must be an integer
            name: bad_request
            temporary: true
            timeout: false
        required:
            - name
            - id
            - message
            - temporary
            - timeout
            - fault
    HyUserUpdateUserNotFoundResponseBody:
        title: 'Mediatype identifier: application/vnd.goa.error; view=default'
        type: object
        properties:
            fault:
                type: boolean
                description: Is the error a server-side fault?
                example: false
            id:
                type: string
                description: ID is a unique identifier for this particular occurrence of the problem.
                example: 123abc
            message:
                type: string
                description: Message is a human-readable explanation specific to this occurrence of the problem.
                example: parameter 'p' must be an integer
            name:
                type: string
                description: Name is the name of this class of errors.
                example: bad_request
            temporary:
                type: boolean
                description: Is the error temporary?
                example: false
            timeout:
                type: boolean
                description: Is the error a timeout?
                example: true
        description: updateUser_NotFound_response_body result type (default view)
        example:
            fault: false
            id: 123abc
            message: parameter 'p' must be an integer
            name: bad_request
            temporary: false
            timeout: false
        required:
            - name
            - id
            - message
            - temporary
            - timeout
            - fault
    HyUserUpdateUserRequestBody:
        title: HyUserUpdateUserRequestBody
        type: object
        properties:
            email:
                type: string
                description: E-mail of user
                example: hy@gmail.com
                format: email
            password:
                type: string
                description: Password
                example: xxxxxxxx
                minLength: 8
                maxLength: 20
            user_name:
                type: string
                description: User name
                example: Hiroki
                minLength: 2
                maxLength: 20
        example:
            email: hy@gmail.com
            password: xxxxxxxx
            user_name: Hiroki
    HyUserUserListNotFoundResponseBody:
        title: 'Mediatype identifier: application/vnd.goa.error; view=default'
        type: object
        properties:
            fault:
                type: boolean
                description: Is the error a server-side fault?
                example: false
            id:
                type: string
                description: ID is a unique identifier for this particular occurrence of the problem.
                example: 123abc
            message:
                type: string
                description: Message is a human-readable explanation specific to this occurrence of the problem.
                example: parameter 'p' must be an integer
            name:
                type: string
                description: Name is the name of this class of errors.
                example: bad_request
            temporary:
                type: boolean
                description: Is the error temporary?
                example: false
            timeout:
                type: boolean
                description: Is the error a timeout?
                example: true
        description: userList_NotFound_response_body result type (default view)
        example:
            fault: false
            id: 123abc
            message: parameter 'p' must be an integer
            name: bad_request
            temporary: true
            timeout: true
        required:
            - name
            - id
            - message
            - temporary
            - timeout
            - fault
    HyUserUserResponseCollection:
        title: 'Mediatype identifier: application/vnd.user+json; type=collection; view=default'
        type: array
        items:
            $ref: '#/definitions/UserResponse'
        description: UserListResponseBody is the result type for an array of UserResponse (default view)
        example:
            - email: hy@gmail.com
              user_id: 10
              user_name: Hiroki
            - email: hy@gmail.com
              user_id: 10
              user_name: Hiroki
    HyUserWorkHistoryUserworkhistoryResponseCollection:
        title: 'Mediatype identifier: application/vnd.userworkhistory+json; type=collection; view=default'
        type: array
        items:
            $ref: '#/definitions/UserworkhistoryResponse'
        description: GetUserWorkHistoryResponseBody is the result type for an array of UserworkhistoryResponse (default view)
        example:
            - company: Company
              country: nl
              description: '["Developed resume site for job seeking."]'
              techs: '["Golang with goa", "Riot.js", "Semantic UI", "MySQL", "Docker", "Travis-CI"]'
              term: Jul 2017 - Aug 2017
              title: Developer
            - company: Company
              country: nl
              description: '["Developed resume site for job seeking."]'
              techs: '["Golang with goa", "Riot.js", "Semantic UI", "MySQL", "Docker", "Travis-CI"]'
              term: Jul 2017 - Aug 2017
              title: Developer
            - company: Company
              country: nl
              description: '["Developed resume site for job seeking."]'
              techs: '["Golang with goa", "Riot.js", "Semantic UI", "MySQL", "Docker", "Travis-CI"]'
              term: Jul 2017 - Aug 2017
              title: Developer
            - company: Company
              country: nl
              description: '["Developed resume site for job seeking."]'
              techs: '["Golang with goa", "Riot.js", "Semantic UI", "MySQL", "Docker", "Travis-CI"]'
              term: Jul 2017 - Aug 2017
              title: Developer
    HyUsertechUsertechResponseCollection:
        title: 'Mediatype identifier: application/vnd.usertech+json; type=collection; view=default'
        type: array
        items:
            $ref: '#/definitions/UsertechResponse'
        description: GetUserLikeTechResponseBody is the result type for an array of UsertechResponse (default view)
        example:
            - id: 10
              tech_name: Golang
            - id: 10
              tech_name: Golang
            - id: 10
              tech_name: Golang
            - id: 10
              tech_name: Golang
    TechResponse:
        title: 'Mediatype identifier: application/vnd.tech+json; view=default'
        type: object
        properties:
            tech_id:
                type: integer
                description: Key ID
                example: 10
                minimum: 1
            tech_name:
                type: string
                description: Tech name
                example: Golang
                minLength: 1
                maxLength: 40
        description: A tech information (default view)
        example:
            tech_id: 10
            tech_name: Golang
    UserResponse:
        title: 'Mediatype identifier: application/vnd.user+json; view=default'
        type: object
        properties:
            email:
                type: string
                description: E-mail of user
                example: hy@gmail.com
                format: email
            user_id:
                type: integer
                description: Key ID
                example: 10
                minimum: 1
            user_name:
                type: string
                description: User name
                example: Hiroki
                minLength: 2
                maxLength: 20
        description: User information (default view)
        example:
            email: hy@gmail.com
            user_id: 10
            user_name: Hiroki
    UsertechResponse:
        title: 'Mediatype identifier: application/vnd.usertech+json; view=default'
        type: object
        properties:
            id:
                type: integer
                description: Key ID
                example: 10
                minimum: 1
            tech_name:
                type: string
                description: Tech name
                example: Golang
                minLength: 1
                maxLength: 40
        description: A user information (default view)
        example:
            id: 10
            tech_name: Golang
        required:
            - tech_name
    UserworkhistoryResponse:
        title: 'Mediatype identifier: application/vnd.userworkhistory+json; view=default'
        type: object
        properties:
            company:
                type: string
                description: Company name
                example: Company
                minLength: 2
                maxLength: 40
            country:
                type: string
                description: Country code
                example: nl
                minLength: 2
                maxLength: 2
            description:
                type: string
                description: job description
                example: '["Developed resume site for job seeking."]'
                format: binary
            techs:
                type: string
                description: used techs
                example: '["Golang with goa", "Riot.js", "Semantic UI", "MySQL", "Docker", "Travis-CI"]'
                format: binary
            term:
                type: string
                description: worked period
                example: Jul 2017 - Aug 2017
                minLength: 10
                maxLength: 20
            title:
                type: string
                description: Job Title
                example: Developer
                minLength: 2
                maxLength: 40
        description: A user information (default view)
        example:
            company: Company
            country: nl
            description: '["Developed resume site for job seeking."]'
            techs: '["Golang with goa", "Riot.js", "Semantic UI", "MySQL", "Docker", "Travis-CI"]'
            term: Jul 2017 - Aug 2017
            title: Developer
        required:
            - title
            - company
            - country
securityDefinitions:
    jwt_header_Authorization:
        type: apiKey
        description: |4-
            **Security Scopes**:
              * `api:access`: API access
        name: Authorization
        in: header
externalDocs:
    description: goa README
    url: https://github.com/goadesign/goa
