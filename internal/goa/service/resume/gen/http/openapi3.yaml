openapi: 3.0.3
info:
    title: resume API
    description: go-goa API with goa framework
    contact:
        name: hiromaily
        url: https://hiromaily.github.io/
        email: hiromaily@gmail.com
    license:
        name: MIT
        url: https://github.com/goadesign/goa/blob/master/LICENSE
    version: "1.0"
servers:
    - url: http://localhost:8080
    - url: http://localhost:8090
paths:
    /{*filepath}:
        get:
            tags:
                - static
            summary: Download ./docs/
            operationId: static#/{*filepath}
            parameters:
                - name: filepath
                  in: path
                  description: Relative file path
                  required: true
            responses:
                "200":
                    description: File not found
                "404":
                    description: File not found
    /api/auth/login:
        post:
            tags:
                - auth
            summary: login auth
            description: Login and return jwt token
            operationId: auth#login
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LoginRequestBody'
                        example:
                            email: hy@gmail.com
                            password: xxxxxxxx
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Authorized'
                            example:
                                id: 10
                                token: token.string
                "401":
                    description: 'Unauthorized: Unauthorized response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
    /api/company:
        get:
            tags:
                - hy_company
            summary: companyList hy_company
            description: List all companies
            operationId: hy_company#companyList
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                description: 'Response body may alternatively be one of #/components/schemas/CompanyResponseIDCollection or #/components/schemas/CompanyResponseIdnameCollection'
                                $ref: '#/components/schemas/CompanyCollection'
                            example:
                                - address: Shinagawa Tokyo
                                  company_id: 10
                                  company_name: Company
                                  country_name: Est qui iure eligendi alias.
                                  created_at: "2017-03-10T15:00:00Z"
                                  updated_at: "2017-03-10T15:00:00Z"
                                - address: Shinagawa Tokyo
                                  company_id: 10
                                  company_name: Company
                                  country_name: Est qui iure eligendi alias.
                                  created_at: "2017-03-10T15:00:00Z"
                                  updated_at: "2017-03-10T15:00:00Z"
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
            security:
                - jwt_header_Authorization:
                    - api:access
        post:
            tags:
                - hy_company
            summary: createCompany hy_company
            description: Create new company
            operationId: hy_company#createCompany
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateCompanyRequestBody'
                        example:
                            address: Shinagawa Tokyo
                            company_name: Company
                            country_id: 110
            responses:
                "201":
                    description: Created response.
                    content:
                        application/json:
                            schema:
                                description: 'Response body may alternatively be one of #/components/schemas/CompanyResponseID or #/components/schemas/CompanyResponseIdname'
                                $ref: '#/components/schemas/Company'
                            example:
                                address: Shinagawa Tokyo
                                company_id: 10
                                company_name: Company
                                country_name: Quis sit vel.
                                created_at: "2017-03-10T15:00:00Z"
                                updated_at: "2017-03-10T15:00:00Z"
                "400":
                    description: 'BadRequest: Bad Request response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
            security:
                - jwt_header_Authorization:
                    - api:access
    /api/company/{company_id}:
        delete:
            tags:
                - hy_company
            summary: deleteCompany hy_company
            description: Delete company
            operationId: hy_company#deleteCompany
            parameters:
                - name: company_id
                  in: path
                  description: Company ID
                  required: true
                  schema:
                    type: integer
                    description: Company ID
                    example: 1046919295188121971
                    minimum: 1
                  example: 6988304720051856351
            responses:
                "200":
                    description: OK response.
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
            security:
                - jwt_header_Authorization:
                    - api:access
        get:
            tags:
                - hy_company
            summary: getCompany hy_company
            description: returns company by given company_id
            operationId: hy_company#getCompany
            parameters:
                - name: company_id
                  in: path
                  description: Company ID
                  required: true
                  schema:
                    type: integer
                    description: Company ID
                    example: 339745344289456661
                    minimum: 1
                  example: 4571527033430832189
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                description: 'Response body may alternatively be one of #/components/schemas/CompanyResponseID or #/components/schemas/CompanyResponseIdname'
                                $ref: '#/components/schemas/Company'
                            example:
                                address: Shinagawa Tokyo
                                company_id: 10
                                company_name: Company
                                country_name: Qui reprehenderit aut.
                                created_at: "2017-03-10T15:00:00Z"
                                updated_at: "2017-03-10T15:00:00Z"
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
            security:
                - jwt_header_Authorization:
                    - api:access
        put:
            tags:
                - hy_company
            summary: updateCompany hy_company
            description: Update company data
            operationId: hy_company#updateCompany
            parameters:
                - name: company_id
                  in: path
                  description: Company ID
                  required: true
                  schema:
                    type: integer
                    description: Company ID
                    example: 4190895503921200415
                    minimum: 1
                  example: 396881324212913759
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateCompanyRequestBody'
                        example:
                            address: Shinagawa Tokyo
                            company_name: Company
                            country_id: 110
            responses:
                "200":
                    description: OK response.
                "400":
                    description: 'BadRequest: Bad Request response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
            security:
                - jwt_header_Authorization:
                    - api:access
    /api/health:
        get:
            tags:
                - health
            summary: health health
            operationId: health#health
            responses:
                "200":
                    description: OK response.
    /api/tech:
        get:
            tags:
                - hy_tech
            summary: techList hy_tech
            description: List all techs
            operationId: hy_tech#techList
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                description: 'Response body may alternatively be #/components/schemas/TechResponseIDCollection'
                                $ref: '#/components/schemas/TechCollection'
                            example:
                                - created_at: "2017-03-10T15:00:00Z"
                                  tech_id: 10
                                  tech_name: Golang
                                  updated_at: "2017-03-10T15:00:00Z"
                                - created_at: "2017-03-10T15:00:00Z"
                                  tech_id: 10
                                  tech_name: Golang
                                  updated_at: "2017-03-10T15:00:00Z"
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
            security:
                - jwt_header_Authorization:
                    - api:access
        post:
            tags:
                - hy_tech
            summary: createTech hy_tech
            description: Create new tech
            operationId: hy_tech#createTech
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateTechRequestBody'
                        example:
                            tech_name: Golang
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                description: 'Response body may alternatively be #/components/schemas/TechResponseID'
                                $ref: '#/components/schemas/Tech'
                            example:
                                created_at: "2017-03-10T15:00:00Z"
                                tech_id: 10
                                tech_name: Golang
                                updated_at: "2017-03-10T15:00:00Z"
                "201":
                    description: Created response.
                    content:
                        application/json:
                            schema:
                                description: 'Response body may alternatively be #/components/schemas/TechResponseID'
                                $ref: '#/components/schemas/Tech'
                            example:
                                created_at: "2017-03-10T15:00:00Z"
                                tech_id: 10
                                tech_name: Golang
                                updated_at: "2017-03-10T15:00:00Z"
                "400":
                    description: 'BadRequest: Bad Request response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
            security:
                - jwt_header_Authorization:
                    - api:access
    /api/tech/{tech_id}:
        delete:
            tags:
                - hy_tech
            summary: deleteTech hy_tech
            description: Delete tech
            operationId: hy_tech#deleteTech
            parameters:
                - name: tech_id
                  in: path
                  description: Tech ID
                  required: true
                  schema:
                    type: integer
                    description: Tech ID
                    example: 5709384348704187234
                    minimum: 1
                  example: 9079370171329166774
            responses:
                "200":
                    description: OK response.
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
            security:
                - jwt_header_Authorization:
                    - api:access
        get:
            tags:
                - hy_tech
            summary: getTech hy_tech
            description: returns tech by given tech id
            operationId: hy_tech#getTech
            parameters:
                - name: tech_id
                  in: path
                  description: Tech ID
                  required: true
                  schema:
                    type: integer
                    description: Tech ID
                    example: 2847978431605506772
                    minimum: 1
                  example: 2575621331362584676
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                description: 'Response body may alternatively be #/components/schemas/TechResponseID'
                                $ref: '#/components/schemas/Tech'
                            example:
                                created_at: "2017-03-10T15:00:00Z"
                                tech_id: 10
                                tech_name: Golang
                                updated_at: "2017-03-10T15:00:00Z"
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
            security:
                - jwt_header_Authorization:
                    - api:access
        put:
            tags:
                - hy_tech
            summary: updateTech hy_tech
            description: Update tech data
            operationId: hy_tech#updateTech
            parameters:
                - name: tech_id
                  in: path
                  description: Tech ID
                  required: true
                  schema:
                    type: integer
                    description: Tech ID
                    example: 1834942356353653981
                    minimum: 1
                  example: 6452748538961127061
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateTechRequestBody'
                        example:
                            tech_name: Golang
            responses:
                "200":
                    description: OK response.
                "400":
                    description: 'BadRequest: Bad Request response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
            security:
                - jwt_header_Authorization:
                    - api:access
    /api/user:
        get:
            tags:
                - hy_user
            summary: userList hy_user
            description: List all users
            operationId: hy_user#userList
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                description: 'Response body may alternatively be #/components/schemas/UserResponseIDCollection'
                                $ref: '#/components/schemas/UserCollection'
                            example:
                                - created_at: "2017-03-10T15:00:00Z"
                                  email: hy@gmail.com
                                  password: xxxxxxxx
                                  updated_at: "2017-03-10T15:00:00Z"
                                  user_id: 10
                                  user_name: Hiroki
                                - created_at: "2017-03-10T15:00:00Z"
                                  email: hy@gmail.com
                                  password: xxxxxxxx
                                  updated_at: "2017-03-10T15:00:00Z"
                                  user_id: 10
                                  user_name: Hiroki
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
            security:
                - jwt_header_Authorization:
                    - api:access
        post:
            tags:
                - hy_user
            summary: createUser hy_user
            description: Create new user
            operationId: hy_user#createUser
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateUserRequestBody'
                        example:
                            email: hy@gmail.com
                            password: xxxxxxxx
                            user_name: Hiroki
            responses:
                "201":
                    description: Created response.
                    content:
                        application/json:
                            schema:
                                description: 'Response body may alternatively be #/components/schemas/UserResponseID'
                                $ref: '#/components/schemas/User'
                            example:
                                created_at: "2017-03-10T15:00:00Z"
                                email: hy@gmail.com
                                password: xxxxxxxx
                                updated_at: "2017-03-10T15:00:00Z"
                                user_id: 10
                                user_name: Hiroki
                "400":
                    description: 'BadRequest: Bad Request response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
            security:
                - jwt_header_Authorization:
                    - api:access
    /api/user/{user_id}:
        delete:
            tags:
                - hy_user
            summary: deleteUser hy_user
            description: Delete user
            operationId: hy_user#deleteUser
            parameters:
                - name: user_id
                  in: path
                  description: User ID
                  required: true
                  schema:
                    type: integer
                    description: User ID
                    example: 7745277364261132187
                    minimum: 1
                  example: 7909492857951961546
            responses:
                "200":
                    description: OK response.
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
            security:
                - jwt_header_Authorization:
                    - api:access
        get:
            tags:
                - hy_user
            summary: getUser hy_user
            description: Get user by given user id
            operationId: hy_user#getUser
            parameters:
                - name: user_id
                  in: path
                  description: User ID
                  required: true
                  schema:
                    type: integer
                    description: User ID
                    example: 1288301141656066467
                    minimum: 1
                  example: 1527676881617102183
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                description: 'Response body may alternatively be #/components/schemas/UserResponseID'
                                $ref: '#/components/schemas/User'
                            example:
                                created_at: "2017-03-10T15:00:00Z"
                                email: hy@gmail.com
                                password: xxxxxxxx
                                updated_at: "2017-03-10T15:00:00Z"
                                user_id: 10
                                user_name: Hiroki
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
            security:
                - jwt_header_Authorization:
                    - api:access
        put:
            tags:
                - hy_user
            summary: updateUser hy_user
            description: Update user data
            operationId: hy_user#updateUser
            parameters:
                - name: user_id
                  in: path
                  description: User ID
                  required: true
                  schema:
                    type: integer
                    description: User ID
                    example: 3416244926440088422
                    minimum: 1
                  example: 5989441150819645180
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateUserRequestBody'
                        example:
                            email: hy@gmail.com
                            password: xxxxxxxx
                            user_name: Hiroki
            responses:
                "200":
                    description: OK response.
                "400":
                    description: 'BadRequest: Bad Request response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
            security:
                - jwt_header_Authorization:
                    - api:access
    /api/user/{user_id}/disliketech:
        get:
            tags:
                - hy_usertech
            summary: getUserDisLikeTech hy_usertech
            description: get user's dislike techs
            operationId: hy_usertech#getUserDisLikeTech
            parameters:
                - name: user_id
                  in: path
                  description: User ID
                  required: true
                  schema:
                    type: integer
                    description: User ID
                    example: 3869040641015927670
                    minimum: 1
                  example: 2429748020324554069
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                description: 'Response body may alternatively be #/components/schemas/UsertechResponseTechNameCollection'
                                $ref: '#/components/schemas/UsertechCollection'
                            example:
                                - id: 10
                                  tech_name: Golang
                                - id: 10
                                  tech_name: Golang
                                - id: 10
                                  tech_name: Golang
                                - id: 10
                                  tech_name: Golang
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
            security:
                - jwt_header_Authorization:
                    - api:access
    /api/user/{user_id}/liketech:
        get:
            tags:
                - hy_usertech
            summary: getUserLikeTech hy_usertech
            description: get user's favorite techs
            operationId: hy_usertech#getUserLikeTech
            parameters:
                - name: user_id
                  in: path
                  description: User ID
                  required: true
                  schema:
                    type: integer
                    description: User ID
                    example: 6105886882736115680
                    minimum: 1
                  example: 156287551336088560
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                description: 'Response body may alternatively be #/components/schemas/UsertechResponseTechNameCollection'
                                $ref: '#/components/schemas/UsertechCollection'
                            example:
                                - id: 10
                                  tech_name: Golang
                                - id: 10
                                  tech_name: Golang
                                - id: 10
                                  tech_name: Golang
                                - id: 10
                                  tech_name: Golang
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
            security:
                - jwt_header_Authorization:
                    - api:access
    /api/user/{user_id}/workhistory:
        get:
            tags:
                - hy_userWorkHistory
            summary: getUserWorkHistory hy_userWorkHistory
            description: get user's work history
            operationId: hy_userWorkHistory#getUserWorkHistory
            parameters:
                - name: user_id
                  in: path
                  description: User ID
                  required: true
                  schema:
                    type: integer
                    description: User ID
                    example: 220270010374292935
                    minimum: 1
                  example: 5823852514308063432
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserworkhistoryCollection'
                            example:
                                - company_name: Company
                                  country_name: nl
                                  description: '["Developed resume site for job seeking."]'
                                  techs: '["Golang with goa", "Riot.js", "Semantic UI", "MySQL", "Docker", "Travis-CI"]'
                                  term: Jul 2017 - Aug 2017
                                  title: Developer
                                - company_name: Company
                                  country_name: nl
                                  description: '["Developed resume site for job seeking."]'
                                  techs: '["Golang with goa", "Riot.js", "Semantic UI", "MySQL", "Docker", "Travis-CI"]'
                                  term: Jul 2017 - Aug 2017
                                  title: Developer
                                - company_name: Company
                                  country_name: nl
                                  description: '["Developed resume site for job seeking."]'
                                  techs: '["Golang with goa", "Riot.js", "Semantic UI", "MySQL", "Docker", "Travis-CI"]'
                                  term: Jul 2017 - Aug 2017
                                  title: Developer
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
            security:
                - jwt_header_Authorization:
                    - api:access
    /openapi.json:
        get:
            tags:
                - static
            summary: Download ./internal/goa/service/resume/gen/http/openapi.json
            operationId: static#/openapi.json
            responses:
                "200":
                    description: File downloaded
    /openapi3.json:
        get:
            tags:
                - static
            summary: Download ./internal/goa/service/resume/gen/http/openapi3.json
            operationId: static#/openapi3.json
            responses:
                "200":
                    description: File downloaded
components:
    schemas:
        Authorized:
            type: object
            properties:
                id:
                    type: integer
                    description: Key ID
                    example: 10
                    minimum: 1
                token:
                    type: string
                    description: JWT token
                    example: token.string
            example:
                id: 10
                token: token.string
            required:
                - token
                - id
        Company:
            type: object
            properties:
                address:
                    type: string
                    description: Company Address
                    example: Shinagawa Tokyo
                    minLength: 2
                    maxLength: 80
                company_id:
                    type: integer
                    description: Key ID
                    example: 10
                    minimum: 1
                company_name:
                    type: string
                    description: Company name
                    example: Company
                    minLength: 2
                    maxLength: 40
                country_name:
                    type: string
                    example: Esse iusto architecto nesciunt et.
                created_at:
                    type: string
                    description: Datetime
                    example: "2017-03-10T15:00:00Z"
                    format: date-time
                updated_at:
                    type: string
                    description: Datetime
                    example: "2017-03-10T15:00:00Z"
                    format: date-time
            description: A company information
            example:
                address: Shinagawa Tokyo
                company_id: 10
                company_name: Company
                country_name: Exercitationem animi beatae reprehenderit a quis consequuntur.
                created_at: "2017-03-10T15:00:00Z"
                updated_at: "2017-03-10T15:00:00Z"
        CompanyCollection:
            type: array
            items:
                $ref: '#/components/schemas/Company'
            example:
                - address: Shinagawa Tokyo
                  company_id: 10
                  company_name: Company
                  country_name: Est qui iure eligendi alias.
                  created_at: "2017-03-10T15:00:00Z"
                  updated_at: "2017-03-10T15:00:00Z"
                - address: Shinagawa Tokyo
                  company_id: 10
                  company_name: Company
                  country_name: Est qui iure eligendi alias.
                  created_at: "2017-03-10T15:00:00Z"
                  updated_at: "2017-03-10T15:00:00Z"
                - address: Shinagawa Tokyo
                  company_id: 10
                  company_name: Company
                  country_name: Est qui iure eligendi alias.
                  created_at: "2017-03-10T15:00:00Z"
                  updated_at: "2017-03-10T15:00:00Z"
                - address: Shinagawa Tokyo
                  company_id: 10
                  company_name: Company
                  country_name: Est qui iure eligendi alias.
                  created_at: "2017-03-10T15:00:00Z"
                  updated_at: "2017-03-10T15:00:00Z"
        CompanyResponseID:
            type: object
            properties:
                company_id:
                    type: integer
                    description: Key ID
                    example: 10
                    minimum: 1
            description: A company information (id view)
            example:
                company_id: 10
        CompanyResponseIDCollection:
            type: array
            items:
                $ref: '#/components/schemas/CompanyResponseID'
            description: CompanyListResponseBody is the result type for an array of CompanyResponse (id view)
            example:
                - company_id: 10
                - company_id: 10
                - company_id: 10
        CompanyResponseIdname:
            type: object
            properties:
                company_id:
                    type: integer
                    description: Key ID
                    example: 10
                    minimum: 1
                company_name:
                    type: string
                    description: Company name
                    example: Company
                    minLength: 2
                    maxLength: 40
            description: A company information (idname view)
            example:
                company_id: 10
                company_name: Company
        CompanyResponseIdnameCollection:
            type: array
            items:
                $ref: '#/components/schemas/CompanyResponseIdname'
            description: CompanyListResponseBody is the result type for an array of CompanyResponse (idname view)
            example:
                - company_id: 10
                  company_name: Company
                - company_id: 10
                  company_name: Company
        CreateCompanyRequestBody:
            type: object
            properties:
                address:
                    type: string
                    description: Company Address
                    example: Shinagawa Tokyo
                    minLength: 2
                    maxLength: 80
                company_name:
                    type: string
                    description: Company name
                    example: Company
                    minLength: 2
                    maxLength: 40
                country_id:
                    type: integer
                    description: Country ID
                    example: 110
                    minimum: 1
                    maximum: 999
            example:
                address: Shinagawa Tokyo
                company_name: Company
                country_id: 110
            required:
                - company_name
                - country_id
                - address
        CreateTechRequestBody:
            type: object
            properties:
                tech_name:
                    type: string
                    description: Tech name
                    example: Golang
                    minLength: 1
                    maxLength: 40
            example:
                tech_name: Golang
            required:
                - tech_name
        CreateUserRequestBody:
            type: object
            properties:
                email:
                    type: string
                    description: E-mail of user
                    example: hy@gmail.com
                    format: email
                password:
                    type: string
                    description: Password
                    example: xxxxxxxx
                    minLength: 8
                    maxLength: 20
                user_name:
                    type: string
                    description: User name
                    example: Hiroki
                    minLength: 2
                    maxLength: 20
            example:
                email: hy@gmail.com
                password: xxxxxxxx
                user_name: Hiroki
            required:
                - user_name
                - email
                - password
        Error:
            type: object
            properties:
                fault:
                    type: boolean
                    description: Is the error a server-side fault?
                    example: true
                id:
                    type: string
                    description: ID is a unique identifier for this particular occurrence of the problem.
                    example: 123abc
                message:
                    type: string
                    description: Message is a human-readable explanation specific to this occurrence of the problem.
                    example: parameter 'p' must be an integer
                name:
                    type: string
                    description: Name is the name of this class of errors.
                    example: bad_request
                temporary:
                    type: boolean
                    description: Is the error temporary?
                    example: false
                timeout:
                    type: boolean
                    description: Is the error a timeout?
                    example: true
            example:
                id: 3F1FKVRR
                message: Value of ID must be an integer
                name: bad_request
            required:
                - name
                - id
                - message
                - temporary
                - timeout
                - fault
        LoginRequestBody:
            type: object
            properties:
                email:
                    type: string
                    description: E-mail of user
                    example: hy@gmail.com
                    format: email
                password:
                    type: string
                    description: Password
                    example: xxxxxxxx
                    minLength: 8
                    maxLength: 20
            example:
                email: hy@gmail.com
                password: xxxxxxxx
            required:
                - email
                - password
        Tech:
            type: object
            properties:
                created_at:
                    type: string
                    description: Datetime
                    example: "2017-03-10T15:00:00Z"
                    format: date-time
                tech_id:
                    type: integer
                    description: Key ID
                    example: 10
                    minimum: 1
                tech_name:
                    type: string
                    description: Tech name
                    example: Golang
                    minLength: 1
                    maxLength: 40
                updated_at:
                    type: string
                    description: Datetime
                    example: "2017-03-10T15:00:00Z"
                    format: date-time
            description: A tech information
            example:
                created_at: "2017-03-10T15:00:00Z"
                tech_id: 10
                tech_name: Golang
                updated_at: "2017-03-10T15:00:00Z"
        TechCollection:
            type: array
            items:
                $ref: '#/components/schemas/Tech'
            example:
                - created_at: "2017-03-10T15:00:00Z"
                  tech_id: 10
                  tech_name: Golang
                  updated_at: "2017-03-10T15:00:00Z"
                - created_at: "2017-03-10T15:00:00Z"
                  tech_id: 10
                  tech_name: Golang
                  updated_at: "2017-03-10T15:00:00Z"
                - created_at: "2017-03-10T15:00:00Z"
                  tech_id: 10
                  tech_name: Golang
                  updated_at: "2017-03-10T15:00:00Z"
        TechResponseID:
            type: object
            properties:
                tech_id:
                    type: integer
                    description: Key ID
                    example: 10
                    minimum: 1
            description: A tech information (id view)
            example:
                tech_id: 10
        TechResponseIDCollection:
            type: array
            items:
                $ref: '#/components/schemas/TechResponseID'
            description: TechListResponseBody is the result type for an array of TechResponse (id view)
            example:
                - tech_id: 10
                - tech_id: 10
                - tech_id: 10
        UpdateCompanyRequestBody:
            type: object
            properties:
                address:
                    type: string
                    description: Company Address
                    example: Shinagawa Tokyo
                    minLength: 2
                    maxLength: 80
                company_name:
                    type: string
                    description: Company name
                    example: Company
                    minLength: 2
                    maxLength: 40
                country_id:
                    type: integer
                    description: Country ID
                    example: 110
                    minimum: 1
                    maximum: 999
            example:
                address: Shinagawa Tokyo
                company_name: Company
                country_id: 110
        UpdateUserRequestBody:
            type: object
            properties:
                email:
                    type: string
                    description: E-mail of user
                    example: hy@gmail.com
                    format: email
                password:
                    type: string
                    description: Password
                    example: xxxxxxxx
                    minLength: 8
                    maxLength: 20
                user_name:
                    type: string
                    description: User name
                    example: Hiroki
                    minLength: 2
                    maxLength: 20
            example:
                email: hy@gmail.com
                password: xxxxxxxx
                user_name: Hiroki
        User:
            type: object
            properties:
                created_at:
                    type: string
                    description: Datetime
                    example: "2017-03-10T15:00:00Z"
                    format: date-time
                email:
                    type: string
                    description: E-mail of user
                    example: hy@gmail.com
                    format: email
                password:
                    type: string
                    description: Password
                    example: xxxxxxxx
                    minLength: 8
                    maxLength: 20
                updated_at:
                    type: string
                    description: Datetime
                    example: "2017-03-10T15:00:00Z"
                    format: date-time
                user_id:
                    type: integer
                    description: Key ID
                    example: 10
                    minimum: 1
                user_name:
                    type: string
                    description: User name
                    example: Hiroki
                    minLength: 2
                    maxLength: 20
            description: User information
            example:
                created_at: "2017-03-10T15:00:00Z"
                email: hy@gmail.com
                password: xxxxxxxx
                updated_at: "2017-03-10T15:00:00Z"
                user_id: 10
                user_name: Hiroki
        UserCollection:
            type: array
            items:
                $ref: '#/components/schemas/User'
            example:
                - created_at: "2017-03-10T15:00:00Z"
                  email: hy@gmail.com
                  password: xxxxxxxx
                  updated_at: "2017-03-10T15:00:00Z"
                  user_id: 10
                  user_name: Hiroki
                - created_at: "2017-03-10T15:00:00Z"
                  email: hy@gmail.com
                  password: xxxxxxxx
                  updated_at: "2017-03-10T15:00:00Z"
                  user_id: 10
                  user_name: Hiroki
                - created_at: "2017-03-10T15:00:00Z"
                  email: hy@gmail.com
                  password: xxxxxxxx
                  updated_at: "2017-03-10T15:00:00Z"
                  user_id: 10
                  user_name: Hiroki
        UserResponseID:
            type: object
            properties:
                user_id:
                    type: integer
                    description: Key ID
                    example: 10
                    minimum: 1
            description: User information (id view)
            example:
                user_id: 10
        UserResponseIDCollection:
            type: array
            items:
                $ref: '#/components/schemas/UserResponseID'
            description: UserListResponseBody is the result type for an array of UserResponse (id view)
            example:
                - user_id: 10
                - user_id: 10
        Usertech:
            type: object
            properties:
                id:
                    type: integer
                    description: Key ID
                    example: 10
                    minimum: 1
                tech_name:
                    type: string
                    description: Tech name
                    example: Golang
                    minLength: 1
                    maxLength: 40
            description: A user information
            example:
                id: 10
                tech_name: Golang
        UsertechCollection:
            type: array
            items:
                $ref: '#/components/schemas/Usertech'
            example:
                - id: 10
                  tech_name: Golang
                - id: 10
                  tech_name: Golang
                - id: 10
                  tech_name: Golang
        UsertechResponseTechName:
            type: object
            properties:
                tech_name:
                    type: string
                    description: Tech name
                    example: Golang
                    minLength: 1
                    maxLength: 40
            description: A user information (techName view)
            example:
                tech_name: Golang
        UsertechResponseTechNameCollection:
            type: array
            items:
                $ref: '#/components/schemas/UsertechResponseTechName'
            description: GetUserLikeTechResponseBody is the result type for an array of UsertechResponse (techName view)
            example:
                - tech_name: Golang
                - tech_name: Golang
                - tech_name: Golang
                - tech_name: Golang
        Userworkhistory:
            type: object
            properties:
                company_name:
                    type: string
                    description: Company name
                    example: Company
                    minLength: 2
                    maxLength: 40
                country_name:
                    type: string
                    description: Country code
                    example: nl
                    minLength: 2
                    maxLength: 2
                description:
                    type: string
                    description: job description
                    example: '["Developed resume site for job seeking."]'
                    format: binary
                techs:
                    type: string
                    description: used techs
                    example: '["Golang with goa", "Riot.js", "Semantic UI", "MySQL", "Docker", "Travis-CI"]'
                    format: binary
                term:
                    type: string
                    description: worked period
                    example: Jul 2017 - Aug 2017
                    minLength: 10
                    maxLength: 20
                title:
                    type: string
                    description: Job Title
                    example: Developer
                    minLength: 2
                    maxLength: 40
            description: A user information
            example:
                company_name: Company
                country_name: nl
                description: '["Developed resume site for job seeking."]'
                techs: '["Golang with goa", "Riot.js", "Semantic UI", "MySQL", "Docker", "Travis-CI"]'
                term: Jul 2017 - Aug 2017
                title: Developer
        UserworkhistoryCollection:
            type: array
            items:
                $ref: '#/components/schemas/Userworkhistory'
            example:
                - company_name: Company
                  country_name: nl
                  description: '["Developed resume site for job seeking."]'
                  techs: '["Golang with goa", "Riot.js", "Semantic UI", "MySQL", "Docker", "Travis-CI"]'
                  term: Jul 2017 - Aug 2017
                  title: Developer
                - company_name: Company
                  country_name: nl
                  description: '["Developed resume site for job seeking."]'
                  techs: '["Golang with goa", "Riot.js", "Semantic UI", "MySQL", "Docker", "Travis-CI"]'
                  term: Jul 2017 - Aug 2017
                  title: Developer
    securitySchemes:
        jwt_header_Authorization:
            type: http
            scheme: bearer
tags:
    - name: auth
      description: The auth service performs login with JWT
    - name: hy_company
      description: The company service returns company data
    - name: health
      description: health check
    - name: static
      description: The static service returns static files
    - name: hy_tech
      description: The tech service returns tech data
    - name: hy_user
      description: The user service returns user data
    - name: hy_usertech
      description: The usertech service returns user's tech data
    - name: hy_userWorkHistory
      description: The user work history service returns user working history data
