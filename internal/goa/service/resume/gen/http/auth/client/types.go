// Code generated by goa v3.2.6, DO NOT EDIT.
//
// auth HTTP client types
//
// Command:
// $ goa gen resume/design

package client

import (
	auth "resume/gen/auth"
	authviews "resume/gen/auth/views"
)

// LoginRequestBody is the type of the "auth" service "login" endpoint HTTP
// request body.
type LoginRequestBody struct {
	// E-mail of user
	Email string `form:"email" json:"email" xml:"email"`
	// Password
	Password string `form:"password" json:"password" xml:"password"`
}

// LoginResponseBody is the type of the "auth" service "login" endpoint HTTP
// response body.
type LoginResponseBody struct {
	// JWT token
	Token *string `form:"token,omitempty" json:"token,omitempty" xml:"token,omitempty"`
	// ID
	ID *int `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// NewLoginRequestBody builds the HTTP request body from the payload of the
// "login" endpoint of the "auth" service.
func NewLoginRequestBody(p *auth.LoginPayload) *LoginRequestBody {
	body := &LoginRequestBody{
		Email:    p.Email,
		Password: p.Password,
	}
	return body
}

// NewLoginAuthorizedOK builds a "auth" service "login" endpoint result from a
// HTTP "OK" response.
func NewLoginAuthorizedOK(body *LoginResponseBody) *authviews.AuthorizedView {
	v := &authviews.AuthorizedView{
		Token: body.Token,
		ID:    body.ID,
	}

	return v
}
