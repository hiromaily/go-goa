// Code generated by goa v3.10.1, DO NOT EDIT.
//
// health endpoints
//
// Command:
// $ goa gen resume/design

package health

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "health" service endpoints.
type Endpoints struct {
	Health goa.Endpoint
}

// NewEndpoints wraps the methods of the "health" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Health: NewHealthEndpoint(s),
	}
}

// Use applies the given middleware to all the "health" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.Health = m(e.Health)
}

// NewHealthEndpoint returns an endpoint function that calls the method
// "health" of service "health".
func NewHealthEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return nil, s.Health(ctx)
	}
}
